<?php

require_once '../testclass/cartIntegrationTest.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-06-24 at 14:37:01.
 */
class cartIntegrationTestTest extends PHPUnit_Framework_TestCase {

    /**
     * @var cartUpdatingUnitTest
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new cartIntegrationTest;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    public function testAddNonDuplicatedBookScenario() {

        //array init class
        $bookSessionArray = $this->object->validateInitSessionIsEmptyIntegrate();
        $this->assertEmpty($bookSessionArray);

        //array add to cart class
        $book1 = array("isbn" => "123456", "amt" => 20, "title" => "Book of Life", "pic" => "https://unsplash.com/photos/DCzpr09cTXY", "price" => 294);
        $addToCart1 = $this->object->addingNewItemIntegrate($book1);
        $this->assertNotEmpty($addToCart1);
        $this->assertSame(1, count($addToCart1));

        $book2 = array("isbn" => "9791296965391", "amt" => 4, "title" => "Book2Happy", "pic" => "https://goolge.com/photos/sjhd72XY", "price" => 5);
        $targetISBN = $book2["isbn"];
        $addToCart2 = $this->object->addingNewItemIntegrate($book2);
        $this->assertNotEmpty($addToCart2);
        $this->assertSame(2, count($addToCart2));

        //array update cart class (true/false)
        $duplicated = $this->object->checkDuplicatedSessionBookIntegrate($targetISBN);
        $this->assertFalse($duplicated);
    }

    public function testAddNonDuplicatedBookScenario2() {

        //array init class
        $bookSessionArray = $this->object->validateInitSessionIsEmptyIntegrate();
        $this->assertEmpty($bookSessionArray);

        //array add to cart class
        $book1 = array("isbn" => "123456", "amt" => 1, "title" => "Book of Life", "pic" => "https://unsplash.com/photos/DCzpr09cTXY", "price" => 10);
        $addToCart1 = $this->object->addingNewItemIntegrate($book1);
        $this->assertNotEmpty($addToCart1);
        $this->assertSame(1, count($addToCart1));

        //array update cart class (check updated amt/price)
        $duplicated = $this->object->checkUpdatedSessionPriceIntegrate();

        $this->assertSame(1, $duplicated[0]["amt"]); //check any changes on book1 (ori=1)
        $this->assertSame(10, $duplicated[0]["price"]); //check any changes on book2 (ori=1*10)
    }

    public function testAddDuplicatedBookScenario() {

        //array init class
        $bookSessionArray = $this->object->validateInitSessionIsEmptyIntegrate();
        $this->assertEmpty($bookSessionArray);

        //array add to cart class
        $book1 = array("isbn" => "123456", "amt" => 20, "title" => "Book of Life", "pic" => "https://unsplash.com/photos/DCzpr09cTXY", "price" => 294);
        $addToCart1 = $this->object->addingNewItemIntegrate($book1);
        $this->assertNotEmpty($addToCart1);
        $this->assertSame(1, count($addToCart1));

        $book2 = array("isbn" => "123456", "amt" => 20, "title" => "Book of Life", "pic" => "https://unsplash.com/photos/DCzpr09cTXY", "price" => 294);
        $targetISBN = $book2["isbn"];
        $addToCart2 = $this->object->addingNewItemIntegrate($book2);
        $this->assertNotEmpty($addToCart2);
        $this->assertSame(2, count($addToCart2));

        //array update cart class
        $duplicated = $this->object->checkDuplicatedSessionBookIntegrate($targetISBN);
        $this->assertTrue($duplicated);
    }

    public function testAddDuplicatedBookScenario2() {

        //array init class
        $bookSessionArray = $this->object->validateInitSessionIsEmptyIntegrate();
        $this->assertEmpty($bookSessionArray);

        //array add to cart class
        $book1 = array("isbn" => "ahdgajhg", "amt" => 1, "title" => "3LittleBear234", "pic" => "https://unsplash.com/photos/df243fs9cTXY", "price" => 17);
        $addToCart1 = $this->object->addingNewItemIntegrate($book1);
        $this->assertNotEmpty($addToCart1);
        $this->assertSame(1, count($addToCart1));

        //array update cart class (check updated amt/price)
        $duplicated = $this->object->checkUpdatedSessionPriceIntegrate();

        $this->assertSame(2, $duplicated[0]["amt"]); //check any changes on book1 (ori=1)
        $this->assertSame(34, $duplicated[0]["price"]); //check any changes on book2 (ori=1*17)
    }

}
